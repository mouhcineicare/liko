name: Deploy Next.js to AWS

on:
  push:
    branches: [ master ] # or your production branch

env:
  AWS_HOST: ${{ secrets.AWS_HOST }}
  AWS_USER: ${{ secrets.AWS_USER }}
  AWS_SSH_KEY: ${{ secrets.AWS_SSH_KEY }}
  AWS_PORT: ${{ secrets.AWS_PORT || '22' }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18' # Match your project's Node version

    - name: Install dependencies
      run: npm install

    - name: Build project
      run: npm run build

    - name: Create deployment package
      run: |
        mkdir -p deployment
        cp -r .next public package.json package-lock.json next.config.js deployment/
        cd deployment && npm install --production

    - name: Compress deployment package
      run: tar -czvf deployment.tar.gz deployment/

    - name: Deploy to AWS
      uses: appleboy/scp-action@master
      with:
        host: ${{ env.AWS_HOST }}
        username: ${{ env.AWS_USER }}
        key: ${{ env.AWS_SSH_KEY }}
        port: ${{ env.AWS_PORT }}
        source: "deployment.tar.gz"
        target: "/home/${{ env.AWS_USER }}/"

    - name: SSH and deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ env.AWS_HOST }}
        username: ${{ env.AWS_USER }}
        key: ${{ env.AWS_SSH_KEY }}
        port: ${{ env.AWS_PORT }}
        script: |
          # Extract deployment package
          tar -xzvf deployment.tar.gz
          
          # Install dependencies and start
          cd deployment
          yarn install
          
          # Start with PM2 (install if not present: npm install -g pm2)
          pm2 restart 0
          
          # Clean up
          cd ..
          rm -rf deployment.tar.gz